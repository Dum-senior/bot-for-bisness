import logging
import telebot
import os

logging.basicConfig(level=logging.INFO)

TOKEN_FILE = 'file.txt'
CHANNEL_ID = '@name'
TOKEN_PATH = os.path.join(os.path.dirname(os.path.abspath(__file__)), TOKEN_FILE)

with open(TOKEN_PATH, 'r') as file:
    token = file.read().strip()

bot = telebot.TeleBot(token)
user_name = ''

# Start command
@bot.message_handler(commands=['start'])
def start_command(message):
    chat_id = message.chat.id
    if not is_user_subscribed(chat_id):
        markup = telebot.types.InlineKeyboardMarkup()
        btn_subscribe = telebot.types.InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_ID[1:]}")
        btn_subscribed = telebot.types.InlineKeyboardButton(text="–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è‚úÖ", callback_data="subscribed")
        markup.add(btn_subscribe, btn_subscribed)
        bot.send_photo(chat_id, photo=open('2222.jpg', 'rb'), caption='–Ø –Ω–µ –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–æ–∫–∞ –≤—ã –Ω–µ –ø–æ–¥–ø–∏—à–µ—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª', reply_markup=markup)
        return
    markup = telebot.types.InlineKeyboardMarkup()
    btn_create_request = telebot.types.InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data="create_request")
    markup.add(btn_create_request)
    bot.send_message(chat_id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É‚è¨', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "create_request")
def handle_create_request(call):
    chat_id = call.message.chat.id
    if is_user_subscribed(chat_id):
        bot.delete_message(chat_id, call.message.message_id)
        bot.send_photo(chat_id, photo=open('2222.jpg', 'rb'))
        bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É, —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å, –∏–ª–∏ –∂–µ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö')
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
        buttons = ['–î–∏–∑–∞–π–Ω–µ—Äüë®üèª‚Äçüé®', '–ù–∞—Ç—è–∂–Ω—ã–µ –ø–æ—Ç–æ–ª–∫–∏ü™ú', '–ú–µ–ª–∫–∏–µ —Ä–µ–º–æ–Ω—Ç–Ω—ã–µ —Ä–∞–±–æ—Ç—ãüõ†', '–†–µ–ø–µ—Ç–∏—Ç–æ—Ä –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µüë®‚Äçüè´']
        for button in buttons:
            keyboard.add(button)
        bot.send_message(chat_id, '–°–ø–∏—Å–æ–∫ —Å–∞–º—ã—Ö –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤üìú:', reply_markup=keyboard)
        bot.register_next_step_handler(call.message, process_data)
    else:
        bot.answer_callback_query(call.id, "–í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")

@bot.callback_query_handler(func=lambda call: call.data == "subscribed")
def handle_subscribed_button(call):
    chat_id = call.message.chat.id
    if is_user_subscribed(chat_id):
        bot.delete_message(chat_id, call.message.message_id)
        markup = telebot.types.InlineKeyboardMarkup()
        btn_create_request = telebot.types.InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data="create_request")
        markup.add(btn_create_request)
        bot.send_message(chat_id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É‚è¨', reply_markup=markup)
    else:
        bot.answer_callback_query(call.id, "–í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")

# Data state
def process_data(message):
    selected_button = message.text
    bot.send_message(message.chat.id, '–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?')
    bot.register_next_step_handler(message, lambda msg: process_name(msg, selected_button))

# Name state
def process_name(message, selected_button):
    global user_name
    user_name = message.text
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –≤–∞—Å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞?')
    
    bot.register_next_step_handler(message, lambda msg: process_phone(msg, selected_button))

# Phone state
def process_phone(message, selected_button):
    phone = message.text
    user_id = message.chat.id
    message_text = f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n–ò–º—è: {user_name} \n–ù–æ–º–µ—Ä: +{phone}\n–£—Å–ª—É–≥–∞: {selected_button}\nID: {user_id}"
    bot.send_message(chat_id='id', text=message_text)
    bot.send_message(message.chat.id, '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.(–µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /start).')

def is_user_subscribed(chat_id):
    try:
        member = bot.get_chat_member(CHANNEL_ID, chat_id)
        return member.status != 'left'
    except telebot.apihelper.ApiException:
        return False

if __name__ == '__main__':
    bot.polling()
